-Using mavenmovies data base to answer questions about the data

use mavenmovies;

/* 1.We will need a list of all staff members, including their first and last names, 
email addresses, and the store identification number where they work. */ 
SELECT 
	first_name,
    Last_name,
    email,
    Store_id
    FROM staff;


/* 2.We will need separate counts of inventory items held at each of your two stores. */ 
SELECT 
	COUNT(inventory_id), 
	store_id
	FROM inventory
	GROUP BY store_id;


/* 3.We will need a count of active customers for each of your stores. Separately, please. */
SELECT COUNT(customer_id), store_id
FROM customer
WHERE active = 1
GROUP BY store_id
ORDER BY store_id;
    

/*4.In order to assess the liability of a data breach, we will need you to provide a count 
of all customer email addresses stored in the database. */
SELECT COUNT(email) AS emails
FROM customer;


/*5.We are interested in how diverse your film offering is as a means of understanding how likely 
you are to keep customers engaged in the future. Please provide a count of unique film titles 
you have in inventory at each store and then provide a count of the unique categories of films you provide. */
SELECT 
store_id,
COUNT(distinct film_id) as Unique_films
FROM inventory
GROUP BY store_id;

SELECT 
COUNT(distinct name) As Unique_Categories
FROM category;


/*6.We would like to understand the replacement cost of your films. 
Please provide the replacement cost for the film that is least expensive to replace, 
the most expensive to replace, and the average of all films you carry.*/
SELECT 
MIN(replacement_cost) as Least_Expensive_cost,
MAX(replacement_cost) as Most_expesnive_cost, 
AVG(replacement_cost) as Average_replacment_cost
FROM film;
    

/*7.We are interested in having you put payment monitoring systems and maximum payment 
processing restrictions in place in order to minimize the future risk of fraud by your staff. 
Please provide the average payment you process, as well as the maximum payment you have processed. */
SELECT 
AVG(amount) AS Average_Payment,
MAX(amount) AS Max_Payment
FROM
payment;


/*8.We would like to better understand what your customer base looks like. 
Please provide a list of all customer identification values, with a count of rentals 
they have made all-time, with your highest volume customers at the top of the list.*/
SELECT 
customer_id, 
COUNT(rental_id) As Number_of_Rentals
FROM rental
GROUP BY customer_id 
ORDER BY COUNT(rental_id) desc

/* 9. Can you pull for me a list of each film we have in inventory? 
I would like to see the film's title, description and the store ID assoicated with each item and it's invenotry ID. */
SELECT 
inventory.store_id,
inventory.inventory_id,
film.title,
film.description
FROM inventory
INNER JOIN film
ON film.film_id = inventory.film_id;

/* 10. One of our investors is interested in the films we carry and how many actors are listed for each film title. 
Can you pull a list of all titles and figure out how many actors are assoicated with each title? */
SELECT 
	film.title,
	COUNT(film_actor.actor_id) AS Count_Of_Actors
    FROM film
		LEFT JOIN film_actor
        ON film_actor.film_id = film.film_id
        GROUP BY film.title;
        
/* 11. Customers often ask which films their favorite actors appear in.
It would be great to have a list of all actors, with each title that they appear in. Could you please pull that for me? */
SELECT 
	actor.first_name AS actor_first_name, 
    actor.last_name AS actor_last_name,
    film.title AS film_title
    FROM actor
    INNER JOIN film_actor
    ON actor.actor_id = film_actor.actor_id
    INNER JOIN film
    ON film.film_id = film_actor.film_id
    ORDER BY actor.last_name;

/* 12. The manager from store 2 is working on expanding our film collection there. 
Could you pull a list of distinct titles and their descirptions, currently available in inventory at store 2? */
SELECT 
distinct film.title,
film.description
FROM film
INNER JOIN inventory
ON film.film_id = inventory.film_id
AND inventory.store_id = 2
ORDER BY film.title;

/* 13. We will be hosting a meeting with all of our staff and advisores soon.
Could you pull one list of all staff and advisor names, include a column noting whether they are a staff member or advisor. */
SELECT 
'Advisor' AS 'Type',
first_name,
last_name
FROM advisor
UNION
SELECT
'Staff' AS 'Type',
first_name,
last_name
FROM staff;

/* 
14. My partner and I want to come by each of the stores in person and meet the managers. 
Please send over the managers’ names at each store, with the full address 
of each property (street address, district, city, and country please).  
*/ 
SELECT 
staff.store_id AS store,
staff.first_name AS Manager_First_Name,
staff.last_name AS Manager_Last_Name,
city.city,
country.country,
address.district,
address.address
FROM store
LEFT JOIN staff ON store.manager_staff_id = staff.staff_id
LEFT JOIN address ON store.address_id =address.address_id
LEFT JOIN city ON address.city_id = city.city_id
LEFT JOIN country ON city.country_id =country.country_id;


/*
15.	I would like to get a better understanding of all of the inventory that would come along with the business. 
Please pull together a list of each inventory item you have stocked, including the store_id number, 
the inventory_id, the name of the film, the film’s rating, its rental rate and replacement cost. 
*/
SELECT 
inventory.store_id AS store,
inventory.inventory_id AS inventory,
film.title,
film.rating,
film.rental_rate,
film.replacement_cost
FROM inventory
LEFT JOIN film
ON film.film_id = inventory.film_id;

/* 
16.	From the same list of films you just pulled, please roll that data up and provide a summary level overview 
of your inventory. We would like to know how many inventory items you have with each rating at each store. 
*/
SELECT 
inventory.store_id AS Store,
film.rating,
COUNT(inventory.inventory_id) AS Inventory_items
FROM inventory
LEFT JOIN film
ON inventory.film_id = film.film_id
GROUP BY 
inventory.store_id,
film.rating;
/* 
17. Similarly, we want to understand how diversified the inventory is in terms of replacement cost. We want to 
see how big of a hit it would be if a certain category of film became unpopular at a certain store.
We would like to see the number of films, as well as the average replacement cost, and total replacement cost, 
sliced by store and film category. 
*/ 
SELECT 
inventory.store_id,
COUNT(inventory.inventory_id) AS Total_Films,
category.name AS Category,
AVG(film.replacement_cost) AS Average_Replacement_Cost,
SUM(film.replacement_cost) AS Total_Replacement_Cost
FROM inventory
LEFT JOIN film
ON film.film_id = inventory.film_id
LEFT JOIN film_category
ON film.film_id = film_category.film_id
LEFT JOIN category
ON category.category_id = film_category.category_id
GROUP BY store_id, category.name
ORDER BY SUM(film.replacement_cost) desc;

/*
18.	We want to make sure you folks have a good handle on who your customers are. Please provide a list 
of all customer names, which store they go to, whether or not they are currently active, 
and their full addresses – street address, city, and country. 
*/
SELECT 
Customer.store_id AS Store,
customer.active AS Active,
customer.first_name AS First_name,
customer.last_name AS Last_name,
address.address AS Street_Address,
city.city AS City,
country.country AS Country
FROM customer
LEFT JOIN address
ON customer.address_id = address.address_id
LEFT JOIN city
ON address.city_id = city.city_id
LEFT JOIN country
ON city.country_id = country.country_id;

/*
19.	We would like to understand how much your customers are spending with you, and also to know 
who your most valuable customers are. Please pull together a list of customer names, their total 
lifetime rentals, and the sum of all payments you have collected from them. It would be great to 
see this ordered on total lifetime value, with the most valuable customers at the top of the list. 
*/
SELECT 
customer.first_name AS First_Name,
customer.last_name AS Last_Name,
COUNT(rental.rental_id) AS Lifetime_Rentals,
SUM(payment.amount) AS Total_Payments
FROM customer
LEFT JOIN rental
ON customer.customer_id = rental.customer_id
LEFT JOIN payment
ON rental.rental_id = payment.rental_id
GROUP BY customer.first_name, customer.last_name
ORDER BY SUM(payment.amount) desc;
    
/*
20. My partner and I would like to get to know your board of advisors and any current investors.
Could you please provide a list of advisor and investor names in one table? 
Could you please note whether they are an investor or an advisor, and for the investors, 
it would be good to include which company they work with. 
*/
SELECT 
'Advisor' AS 'Type',
first_name,
last_name,
'N/A'
FROM advisor
UNION
SELECT 
'Investor' AS 'Type',
first_name,
last_name,
company_name
FROM investor;

/*
21. We're interested in how well you have covered the most-awarded actors. 
Of all the actors with three types of awards, for what % of them do we carry a film?
And how about for actors with two types of awards? Same questions. 
Finally, how about actors with just one award? 
*/
SELECT
	CASE 
		WHEN actor_award.awards = 'Emmy, Oscar, Tony ' THEN '3 awards'
        WHEN actor_award.awards IN ('Emmy, Oscar','Emmy, Tony', 'Oscar, Tony') THEN '2 awards'
		ELSE '1 award'
	END AS number_of_awards, 
    AVG(CASE WHEN actor_award.actor_id IS NULL THEN 0 ELSE 1 END) AS pct_w_one_film
	
FROM actor_award
	

GROUP BY 
	CASE 
		WHEN actor_award.awards = 'Emmy, Oscar, Tony ' THEN '3 awards'
        WHEN actor_award.awards IN ('Emmy, Oscar','Emmy, Tony', 'Oscar, Tony') THEN '2 awards'
		ELSE '1 award'
	END;
